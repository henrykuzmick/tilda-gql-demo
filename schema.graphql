type Organization {
  id: ID!
  alias: String
  name: String!
  url: String
  country: String
  state: String
  city: String
  postalCode: String
  email: String
  contactPhone: String
  bio: String
  orgType: OrgType!
  orgMemberships: [OrgMembership!]!
}

enum OrgType {
  SMO
  CRO
  Sponsor
}

type User {
  id: ID!
  onboarded: Boolean!
  username: String!
  name: String
  email: String!
  contact: String
  bio: String
  capabilities: String
  location: String
  orgMemberships: [OrgMembership!]!
}

type OrgMembership {
  role: String!
  user: User!
  organization: Organization!
}

type Study {
  id: ID!
  name: String!
  status: String!
  numapproved: Int!
  numparticipants: Int!
  numpatients: Int!
  numpending: Int!
  numrejected: Int!
  sponsor: Sponsor
}

type Sponsor {
  id: ID!
  name: String!
  filename: String
  logo: String
}

input OrganizationUpdate {
  name: String
  bio: String
  email: String
  alias: String
  url: String
  country: String
  state: String
  city: String
  postalCode: String
}

type Query {
  myProfile: User!
  organizations: [Organization!]!
  organization(id: ID!): Organization!
  studies: [Study!]!
  study(id: ID!): Study!
}

type Mutation {
  updateOrganization(id: ID!, value: OrganizationUpdate!): Organization
}
